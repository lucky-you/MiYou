apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    buildToolsVersion "30.0.1"


    //开发环境
    def API_DEVELOP_HOST = "\"http://47.110.139.24:8081\""

    //正式环境
    def API_RELEASE_HOST = "\"http://47.110.139.24:8081\""

    def Rong_key = "x18ywvqfx576c";

    def App_server = "http://47.110.139.24:8080/";

    defaultConfig {
        applicationId "com.zhowin.miyou"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "Rong_key", "\"${Rong_key}\"")

        buildConfigField("String", "App_server", "\"${App_server}\"")
    }
    signingConfigs {
        release {
            keyAlias 'app'
            keyPassword '110120119'
            storeFile file('../appKey.keystore')
            storePassword '110120119'
        }
    }
    buildTypes {
        release {
            debuggable false
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField("boolean", "IS_LOG", "false")
            buildConfigField("String", "API_HOST", API_RELEASE_HOST)
        }
        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField("boolean", "IS_LOG", "true")
            buildConfigField("String", "API_HOST", API_DEVELOP_HOST)
        }
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            def date = new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("GMT+08"))
            if (variant.buildType.name.equals('debug')) {
                outputFileName = "MiYou${date}_${versionName}.apk"
            }
            if (variant.buildType.name.equals('release')) {
                outputFileName = "MiYou${date}_${versionName}.apk"
            }
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation project(path: ':base_library')
    implementation 'com.sunfusheng:MarqueeView:1.4.1'
    implementation 'com.akexorcist:RoundCornerProgressBar:2.0.3'
    implementation 'cn.rongcloud.sdk:im_lib:4.0.2' // 即时通讯基础能力库
    implementation 'cn.rongcloud.sdk:im_kit:4.0.2' // 即时通讯 UI 基础组件
    implementation 'cn.rongcloud.sdk:call_kit:4.0.2' // 音视频通话能力 UI 组件
    implementation 'cn.rongcloud.sdk:call_lib:4.0.2' // 音视频呼叫信令
    implementation 'androidx.work:work-runtime:2.4.0'
}
